datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "cargo prisma"
  output   = "../src/prisma.rs"
}

enum LessonStatus {
  PENDING
  COMPLETED
  SKIPPED
}

enum Level {
  A1
  A2
  B1
  B2
  C1
  C2
}

enum Role {
  USER
  ADMIN
}

model User {
  id             String       @id @default(uuid()) @db.Uuid
  googleId       String       @db.VarChar(32)
  displayName    String       @db.VarChar(255)
  email          String       @db.VarChar(255)
  verified_email Boolean      @default(false)
  role           Role         @default(USER)
  photoUrl       String?      @db.VarChar(2048)
  visible        Boolean      @default(true)
  createdAt      DateTime     @default(now())
  userLessons    UserLesson[]
  userStats      UserStats?

  @@index([googleId])
  @@index([id])
}

model Lesson {
  id          String       @id @default(uuid()) @db.Uuid
  lessonData  Json
  studiedLang String       @db.VarChar(2)
  lessonLang  String       @db.VarChar(2)
  level       Level
  createdAt   DateTime     @default(now())
  userLessons UserLesson[]

  @@index([studiedLang, lessonLang, level])
  @@index([id])
}

model UserLesson {
  id            String       @id @default(uuid()) @db.Uuid
  user          User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId        String       @db.Uuid
  lesson        Lesson       @relation(fields: [lessonId], references: [id], onDelete: Cascade)
  lessonId      String       @db.Uuid
  score         Int          @default(0)
  status        LessonStatus @default(PENDING)
  completedAt   DateTime?
  nextAvailable DateTime?

  @@unique([userId, lessonId])
  @@index([id])
  @@index([nextAvailable])
}

model UserStats {
  userId       String @id @db.Uuid
  user         User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  totalScore   Int    @default(0)
  totalLessons Int    @default(0)
}
